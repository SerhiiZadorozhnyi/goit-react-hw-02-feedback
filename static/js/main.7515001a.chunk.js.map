{"version":3,"sources":["components/section/Section.module.css","components/notification/Notification.module.css","components/statistics/Statistics.module.css","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/statistics/Statistics.js","components/notification/Notification.js","App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","className","styles","button","Section","title","children","general","propType","PropTypes","string","isRequired","Statistics","good","neutral","bad","total","positivePercentage","p","Notification","message","notification","App","state","handleClick","e","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,aAAe,qC,uCCAjCD,EAAOC,QAAU,CAAC,EAAI,wB,sJCyBPC,EArBS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACpB,mCACKD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAEIC,KAAK,SACLC,KAAMF,EACNG,QAASL,EACTM,UAAWC,IAAOC,OALtB,SAOKN,GANIA,S,kCCJfO,EAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,0BAASL,UAAWC,IAAOK,QAA3B,UACI,6BAAKF,IACJC,MAITF,EAAQI,SAAW,CACfH,MAAOI,IAAUC,OAAOC,YAIbP,Q,gBCOAQ,EAnBI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,IAAKC,EAAtB,EAAsBA,MAAOC,EAA7B,EAA6BA,mBAA7B,OACf,qCACI,oBAAGhB,UAAWC,IAAOgB,EAArB,mBAA+BL,KAC/B,oBAAGZ,UAAWC,IAAOgB,EAArB,sBAAkCJ,KAClC,oBAAGb,UAAWC,IAAOgB,EAArB,kBAA8BH,KAC9B,oBAAGd,UAAWC,IAAOgB,EAArB,oBAAgCF,KAChC,oBAAGf,UAAWC,IAAOgB,EAArB,gCAA4CD,EAA5C,Y,iBCGOE,EATM,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,mBAAGnB,UAAWC,IAAOmB,aAArB,SAAoCD,KCsDzBE,E,4MApDbC,MAAQ,CACJV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTS,YAAc,SAAAC,GACZ,IAAM1B,EAAO0B,EAAEC,OAAO3B,KACtB,EAAK4B,UAAS,SAAAJ,GAAK,kCACdA,GADc,kBAEhBxB,EAAO,EAAKwB,MAAMxB,GAAQ,Q,EAI/B6B,mBAAqB,kBACnB,EAAKL,MAAMV,KAAK,EAAKU,MAAMT,QAAQ,EAAKS,MAAMR,K,EAEhDc,gCAAkC,kBAChC,EAAKN,MAAMV,KACPiB,KAAKC,MAAO,EAAKR,MAAMV,KAAK,EAAKe,qBAAsB,KACvD,G,4CAEN,WACE,MAA6BI,KAAKT,MAA3BV,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IACtB,OACE,qCACE,cAAC,EAAD,CAASV,MAAQ,wBAAjB,SACE,cAAC,EAAD,CACEX,QAASuC,OAAOC,KAAKF,KAAKT,OAC1B5B,gBAAmBqC,KAAKR,gBAG3BQ,KAAKJ,qBACJ,cAAC,EAAD,CAASvB,MAAQ,aAAjB,SACE,cAAC,EAAD,CACEQ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKJ,qBACZX,mBAAoBe,KAAKH,sCAI3B,cAAC,EAAD,CAAcT,QAAU,6B,GA5ClBe,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BjD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.7515001a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"general\":\"Section_general__3Rjgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__KpN-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Statistics_p__KhuVH\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from 'components/feedbackOptions/FeedbackOptions.module.css';\r\n\r\n\r\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\r\n    <>\r\n        {options.map(option => (\r\n            <button\r\n                key={option}\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={onLeaveFeedback}\r\n                className={styles.button}\r\n            >\r\n                {option}\r\n            </button>\r\n        ))}\r\n    </>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\n\r\nconst Section = ({title, children}) => (\r\n    <section className={styles.general}>\r\n        <h2>{title}</h2>\r\n        {children}\r\n    </section>\r\n);\r\n\r\nSection.propType = {\r\n    title: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from 'components/statistics/Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({good, neutral, bad, total, positivePercentage}) => (\r\n    <>\r\n        <p className={styles.p}>Good: {good}</p>\r\n        <p className={styles.p}>Neutral: {neutral}</p>\r\n        <p className={styles.p}>Bad: {bad}</p>\r\n        <p className={styles.p}>Total: {total}</p>\r\n        <p className={styles.p}>Positive feedback: {positivePercentage} %</p>\r\n    </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.number.isRequired,\r\n    positivePercentage: PropTypes.number.isRequired\r\n}\r\n\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from 'components/notification/Notification.module.css'\r\n\r\n\r\nconst Notification = ({message}) => (\r\n    <p className={styles.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default Notification;","import React, {Component} from 'react';\nimport FeedbackOptions from 'components/feedbackOptions/FeedbackOptions';\nimport Section from 'components/section/Section';\nimport Statistics from 'components/statistics/Statistics';\nimport Notification from 'components/notification/Notification';\n\n\nclass App extends Component {\n  state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n  };\n\n  handleClick = e => {\n    const name = e.target.name;\n    this.setState(state => ({\n      ...state,\n      [name]: this.state[name] + 1\n    }));\n  };\n\n  countTotalFeedback = () => \n    this.state.good+this.state.neutral+this.state.bad;\n\n  countPositiveFeedbackPercentage = () =>\n    this.state.good\n      ? Math.round((this.state.good/this.countTotalFeedback())*100)\n      : 0;\n\n  render () {\n    const {good, neutral, bad} = this.state;\n    return (\n      <>\n        <Section title = 'Please leave feedback'>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback = {this.handleClick}\n          />\n        </Section>\n        {this.countTotalFeedback() ? (\n          <Section title = 'Statistics'>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>\n          ) : (\n            <Notification message = \"No feedback given\"/>\n          )\n        }\n      </>\n    );\n  }\n};\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2T-uY\"};"],"sourceRoot":""}